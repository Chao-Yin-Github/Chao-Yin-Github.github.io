<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>y·◑</title>
  <icon>https://yme86.github.io/icon.png</icon>
  <subtitle>Talk is cheap,show me the code.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yme86.github.io/"/>
  <updated>2020-08-18T17:15:21.170Z</updated>
  <id>https://yme86.github.io/</id>
  
  <author>
    <name>Yin Chao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bug记录 -- MyBaits 报错 -- Cannot get Configuration as configuration factory was not set</title>
    <link href="https://yme86.github.io/2020/8/14/Bug%E8%AE%B0%E5%BD%95-MyBaits-%E6%8A%A5%E9%94%99-Cannot-get-Configuration-as-configuration-factory-was-not-set/"/>
    <id>https://yme86.github.io/2020/8/14/Bug%E8%AE%B0%E5%BD%95-MyBaits-%E6%8A%A5%E9%94%99-Cannot-get-Configuration-as-configuration-factory-was-not-set/</id>
    <published>2020-08-14T15:17:40.000Z</published>
    <updated>2020-08-18T17:15:21.170Z</updated>
    
    <summary type="html">
    
      MyBatis 报错 `Cannot get Configuration as configuration factory was not set`
    
    </summary>
    
    
    
      <category term="Bug" scheme="https://YME86.github.io/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>ORM 带来的 N+1 问题</title>
    <link href="https://yme86.github.io/2020/8/13/ORM-%E5%B8%A6%E6%9D%A5%E7%9A%84-N-1-%E9%97%AE%E9%A2%98/"/>
    <id>https://yme86.github.io/2020/8/13/ORM-%E5%B8%A6%E6%9D%A5%E7%9A%84-N-1-%E9%97%AE%E9%A2%98/</id>
    <published>2020-08-13T13:26:16.000Z</published>
    <updated>2020-08-18T17:10:26.401Z</updated>
    
    <summary type="html">
    
      数据库复杂业务带来的查询效率问题解决
    
    </summary>
    
    
    
      <category term="util" scheme="https://YME86.github.io/tags/util/"/>
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识-- 相关子查询优化</title>
    <link href="https://yme86.github.io/2020/7/27/MySQL-%E7%9F%A5%E8%AF%86-%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/"/>
    <id>https://yme86.github.io/2020/7/27/MySQL-%E7%9F%A5%E8%AF%86-%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/</id>
    <published>2020-07-27T08:27:50.000Z</published>
    <updated>2020-08-18T17:12:40.478Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;相关子查询的-MySQL-错误优化-MySQL-5-7-以后不适用&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#相关子查询的-MySQL-错误优化-MySQL-5-7-以后不适用&quot;&gt;⚡&lt;/a&gt;相关子查询的 MySQL 错误优化(MySQL 5.7 以后不适用)&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客( fluid 主题)升级记录</title>
    <link href="https://yme86.github.io/2020/7/26/hexo-%E5%8D%9A%E5%AE%A2(fluid%E4%B8%BB%E9%A2%98)%E5%8D%87%E7%BA%A7%E8%AE%B0%E5%BD%95/"/>
    <id>https://yme86.github.io/2020/7/26/hexo-%E5%8D%9A%E5%AE%A2(fluid%E4%B8%BB%E9%A2%98)%E5%8D%87%E7%BA%A7%E8%AE%B0%E5%BD%95/</id>
    <published>2020-07-26T13:48:50.000Z</published>
    <updated>2020-08-18T17:12:00.020Z</updated>
    
    <summary type="html">
    
      fluid 升级记录
    
    </summary>
    
    
    
      <category term="configuration" scheme="https://YME86.github.io/tags/configuration/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识-- explain 执行计划</title>
    <link href="https://yme86.github.io/2020/7/26/MySQL-%E7%9F%A5%E8%AF%86-explain-%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/"/>
    <id>https://yme86.github.io/2020/7/26/MySQL-%E7%9F%A5%E8%AF%86-explain-%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/</id>
    <published>2020-07-26T10:44:13.000Z</published>
    <updated>2020-08-18T17:06:14.453Z</updated>
    
    <summary type="html">
    
      MySQL explain 执行计划的相关字段说明
    
    </summary>
    
    
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>计网-TCP/IP</title>
    <link href="https://yme86.github.io/2020/7/17/%E8%AE%A1%E7%BD%91-TCP-IP/"/>
    <id>https://yme86.github.io/2020/7/17/%E8%AE%A1%E7%BD%91-TCP-IP/</id>
    <published>2020-07-17T09:20:43.000Z</published>
    <updated>2020-08-18T17:09:08.031Z</updated>
    
    <summary type="html">
    
      TCP/IP 相关常见问题
    
    </summary>
    
    
    
      <category term="Interview" scheme="https://YME86.github.io/tags/Interview/"/>
    
      <category term="net" scheme="https://YME86.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>计网-HTTP</title>
    <link href="https://yme86.github.io/2020/7/17/%E8%AE%A1%E7%BD%91-HTTP/"/>
    <id>https://yme86.github.io/2020/7/17/%E8%AE%A1%E7%BD%91-HTTP/</id>
    <published>2020-07-17T09:20:30.000Z</published>
    <updated>2020-08-18T17:09:00.337Z</updated>
    
    <summary type="html">
    
      HTTP 相关常见问题
    
    </summary>
    
    
    
      <category term="net" scheme="https://YME86.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>计网-HTTPS</title>
    <link href="https://yme86.github.io/2020/7/17/%E8%AE%A1%E7%BD%91-HTTPS/"/>
    <id>https://yme86.github.io/2020/7/17/%E8%AE%A1%E7%BD%91-HTTPS/</id>
    <published>2020-07-17T09:17:28.000Z</published>
    <updated>2020-08-18T17:09:05.681Z</updated>
    
    <summary type="html">
    
      HTTPS 相关常见问题
    
    </summary>
    
    
    
      <category term="net" scheme="https://YME86.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识 -- BKA 优化</title>
    <link href="https://yme86.github.io/2020/5/25/MySQL-%E7%9F%A5%E8%AF%86-BKA-%E4%BC%98%E5%8C%96/"/>
    <id>https://yme86.github.io/2020/5/25/MySQL-%E7%9F%A5%E8%AF%86-BKA-%E4%BC%98%E5%8C%96/</id>
    <published>2020-05-25T12:03:12.000Z</published>
    <updated>2020-08-18T16:41:02.898Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Batched Kay Access&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>Java 知识-- Unsafe</title>
    <link href="https://yme86.github.io/2020/4/30/Java-%E7%9F%A5%E8%AF%86-Unsafe/"/>
    <id>https://yme86.github.io/2020/4/30/Java-%E7%9F%A5%E8%AF%86-Unsafe/</id>
    <published>2020-04-30T04:05:27.000Z</published>
    <updated>2020-08-18T15:57:39.303Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于-unsafe&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#关于-unsafe&quot;&gt;⚡&lt;/a&gt;关于 unsafe&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="https://YME86.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>并发知识-- CAS</title>
    <link href="https://yme86.github.io/2020/4/30/%E5%B9%B6%E5%8F%91%E7%9F%A5%E8%AF%86-CAS/"/>
    <id>https://yme86.github.io/2020/4/30/%E5%B9%B6%E5%8F%91%E7%9F%A5%E8%AF%86-CAS/</id>
    <published>2020-04-30T02:00:48.000Z</published>
    <updated>2020-08-18T15:57:56.492Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;CAS (Compare And Swap) (CompareAndSet): 比较并交换,比较并设定&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="concurrent" scheme="https://YME86.github.io/tags/concurrent/"/>
    
  </entry>
  
  <entry>
    <title>并发知识- (杂谈) 高并发高可用 VS 多线程正确性</title>
    <link href="https://yme86.github.io/2020/4/23/%E5%B9%B6%E5%8F%91%E7%9F%A5%E8%AF%86-%20(%E6%9D%82%E8%B0%88)%20%E9%AB%98%E5%B9%B6%E5%8F%91%E9%AB%98%E5%8F%AF%E7%94%A8-VS-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%AD%A3%E7%A1%AE%E6%80%A7/"/>
    <id>https://yme86.github.io/2020/4/23/%E5%B9%B6%E5%8F%91%E7%9F%A5%E8%AF%86-%20(%E6%9D%82%E8%B0%88)%20%E9%AB%98%E5%B9%B6%E5%8F%91%E9%AB%98%E5%8F%AF%E7%94%A8-VS-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%AD%A3%E7%A1%AE%E6%80%A7/</id>
    <published>2020-04-23T03:44:27.000Z</published>
    <updated>2020-07-17T18:48:40.942Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#写在前面&quot;&gt;⚡&lt;/a&gt;写在前面&lt;/h2&gt;
&lt;p&gt;文章是学习并发编程的时候,觉得并发编程难学,想到什么情况下需要用到并发编程,然后想到了一些情况,故记录之&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="concurrent" scheme="https://YME86.github.io/tags/concurrent/"/>
    
  </entry>
  
  <entry>
    <title>并发知识-- ReentrantLock</title>
    <link href="https://yme86.github.io/2020/4/21/%E5%B9%B6%E5%8F%91%E7%9F%A5%E8%AF%86-ReentrantLock/"/>
    <id>https://yme86.github.io/2020/4/21/%E5%B9%B6%E5%8F%91%E7%9F%A5%E8%AF%86-ReentrantLock/</id>
    <published>2020-04-21T08:51:16.000Z</published>
    <updated>2020-08-18T16:02:24.401Z</updated>
    
    <summary type="html">
    
      如果并发度很大,那么就一定存在线程之前对锁的竞争,这时,如果是公平锁,那么先获取锁的线程先处理,后获取锁的排在一个等待队列,然后这个线程就 `park` 暂停,然后等待锁释放和通知,`unpark` 后,再去获取锁...
    
    </summary>
    
    
    
      <category term="Java" scheme="https://YME86.github.io/tags/Java/"/>
    
      <category term="concurrent" scheme="https://YME86.github.io/tags/concurrent/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识-- ICP 优化</title>
    <link href="https://yme86.github.io/2020/4/16/MySQL-%E7%9F%A5%E8%AF%86-ICP-%E4%BC%98%E5%8C%96/"/>
    <id>https://yme86.github.io/2020/4/16/MySQL-%E7%9F%A5%E8%AF%86-ICP-%E4%BC%98%E5%8C%96/</id>
    <published>2020-04-16T13:16:14.000Z</published>
    <updated>2020-07-26T10:31:15.246Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Index Condition Pushdown (ICP)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目的: 在取出索引的同时,提前判断 where 条件,从而提前过滤一部分不符合条件的记录&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识-- MRR 优化</title>
    <link href="https://yme86.github.io/2020/4/16/MySQL-%E7%9F%A5%E8%AF%86-MRR%20%E4%BC%98%E5%8C%96/"/>
    <id>https://yme86.github.io/2020/4/16/MySQL-%E7%9F%A5%E8%AF%86-MRR%20%E4%BC%98%E5%8C%96/</id>
    <published>2020-04-16T12:47:54.000Z</published>
    <updated>2020-07-17T18:48:40.939Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Multi-Range Read (MRR)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目的:通过将随机 IO 排序,优化为顺序 IO 减少磁盘随机访问&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识-- InnoDB 和 MyISAM</title>
    <link href="https://yme86.github.io/2020/4/15/MySQL-%E7%9F%A5%E8%AF%86-InnoDB-%E5%92%8C-MyISAM/"/>
    <id>https://yme86.github.io/2020/4/15/MySQL-%E7%9F%A5%E8%AF%86-InnoDB-%E5%92%8C-MyISAM/</id>
    <published>2020-04-15T08:30:00.000Z</published>
    <updated>2020-08-14T15:22:19.070Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;区别&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#区别&quot;&gt;⚡&lt;/a&gt;区别&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;InnoDB 支持事务,MyISAM 不支持事务&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识--索引</title>
    <link href="https://yme86.github.io/2020/4/14/MySQL-%E7%9F%A5%E8%AF%86-%E7%B4%A2%E5%BC%95/"/>
    <id>https://yme86.github.io/2020/4/14/MySQL-%E7%9F%A5%E8%AF%86-%E7%B4%A2%E5%BC%95/</id>
    <published>2020-04-14T10:35:00.000Z</published>
    <updated>2020-07-26T10:32:56.040Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;几种索引&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#几种索引&quot;&gt;⚡&lt;/a&gt;几种索引&lt;/h2&gt;
&lt;h3 id=&quot;聚集索引-聚簇索引-cluster-index-主键索引&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#聚集索引-聚簇索引-cluster-index-主键索引&quot;&gt;⚡&lt;/a&gt;聚集索引 (聚簇索引 cluster index)(主键索引)&lt;/h3&gt;
&lt;p&gt;聚集索引数据行的&lt;strong&gt;物理顺序&lt;/strong&gt;与列值(一般是主键列)的逻辑顺序相同&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>JVM 知识--JVM 和 JMM</title>
    <link href="https://yme86.github.io/2020/4/14/JVM-%E7%9F%A5%E8%AF%86-JVM-%E5%92%8C-JMM/"/>
    <id>https://yme86.github.io/2020/4/14/JVM-%E7%9F%A5%E8%AF%86-JVM-%E5%92%8C-JMM/</id>
    <published>2020-04-14T05:35:03.000Z</published>
    <updated>2020-07-17T18:48:40.939Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JMM-解释&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#JMM-解释&quot;&gt;⚡&lt;/a&gt;JMM 解释&lt;/h2&gt;
&lt;p&gt;JMM (Java Memory Model) 定义了 Java 虚拟机(JVM)在计算机内存(RAM)中的工作方式。JVM 是整个计算机虚拟模型，所以 JMM 隶属于 JVM&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JVM" scheme="https://YME86.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 常用指令</title>
    <link href="https://yme86.github.io/2020/4/11/MySQL-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>https://yme86.github.io/2020/4/11/MySQL-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-11T14:31:40.000Z</published>
    <updated>2020-07-23T11:48:40.416Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改字段 video 为 utf8mb4 编码&lt;/p&gt;
  &lt;div class=&quot;hljs&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;alter&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;table&lt;/span&gt; slaughter_sheep_info &lt;span class=&quot;hljs-keyword&quot;&gt;change&lt;/span&gt; video video &lt;span class=&quot;hljs-built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;250&lt;/span&gt;) &lt;span class=&quot;hljs-built_in&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; utf8mb4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    </summary>
    
    
    
      <category term="shellCommand" scheme="https://YME86.github.io/tags/shellCommand/"/>
    
      <category term="SQL" scheme="https://YME86.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识--连接join</title>
    <link href="https://yme86.github.io/2020/4/11/MySQL-%E7%9F%A5%E8%AF%86-%E8%BF%9E%E6%8E%A5join/"/>
    <id>https://yme86.github.io/2020/4/11/MySQL-%E7%9F%A5%E8%AF%86-%E8%BF%9E%E6%8E%A5join/</id>
    <published>2020-04-11T13:20:59.000Z</published>
    <updated>2020-07-17T18:48:40.939Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 MySQL 中，只有一种 Join 算法，也就是 Nested Loop Join，没有其他很多数据库所提供的Hash Join，也没有Sort Merge Join&lt;/p&gt;
&lt;p&gt;Nested Loop Join 实际上就是通过驱动表的结果集作为循环基础数据，然后一条一条的通过该结果集中的数据作为过滤条件到下一个表中查询数据，然后合并结果。如果还有第三个参与Join，则再通过前两个表的Join 结果集作为循环基础数据，再一次通过循环查询条件到第三个表中查询数据，如此往复。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nested Loop Join 就是多个表的for循环,以幂次增长&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="database" scheme="https://YME86.github.io/tags/database/"/>
    
  </entry>
  
</feed>
